(()=>{"use strict";var t=function(){},e=function(){function t(){this.cookieName="habitzen.data"}return t.prototype.load=function(){var t=this.getCookie();return t?JSON.parse(t):new Array},t.prototype.save=function(t){var e=JSON.stringify(t);this.setCookie(e),console.log("DataStoreCookie: save")},t.prototype.setCookie=function(t){document.cookie=this.cookieName+"="+t+";SameSite=Strict;Secure; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/"},t.prototype.getCookie=function(){var t=("; "+document.cookie).split("; "+this.cookieName+"=");if(2==t.length)return t.pop().split(";").shift()},t}(),i=function(){function t(){this.dataStore=new e,this.load()}return Object.defineProperty(t.prototype,"list",{get:function(){return this.data},enumerable:!1,configurable:!0}),t.prototype.load=function(){var t=this.dataStore.load();this.data=t},t.prototype.delete=function(t){for(var e=this.list.length-1;e>=0;--e)this.list[e].id==t&&this.list.splice(e,1);this.saveAll()},t.prototype.get=function(t){var e=null;return this.list.forEach((function(i){i.id==t&&(e=i)})),e},t.prototype.save=function(t){t.id?this.modify(t):this.create(t)},t.prototype.saveAll=function(){this.dataStore.save(this.data)},t.prototype.create=function(t){t.id=crypto.randomUUID(),this.list.push(t),this.saveAll()},t.prototype.modify=function(t){this.list.forEach((function(e){e.id==t.id&&(e.name=t.name)})),this.saveAll()},t.prototype.complete=function(t){this.list.forEach((function(e){e.id==t&&(e.timestamp=(new Date).getTime())})),this.saveAll()},t}(),n=function(){function e(){this.habits=new i,this.mainActive=!1}return e.prototype.refreshHabits=function(){var t=this,e=document.getElementById("habit-list");this.clear(e.id);var i=new Date,n=6e4*i.getTimezoneOffset();i.setTime(i.getTime()-n),this.habits.list.forEach((function(n){var o=!1;if(n.timestamp){var s=new Date(n.timestamp);o=t.isSameDay(s,i)}var a=document.createElement("div");a.className=o?"habit-item complete":"habit-item";var c=t.escapeHtml(n.name);a.onclick=function(){t.complete(n.id)},a.innerHTML="<span>"+c+"</span>",e.appendChild(a)})),document.getElementById("debug-last-update").innerText=i.toISOString()},e.prototype.isSameDay=function(t,e){return null!=t&&null!=e&&t.getFullYear()===e.getFullYear()&&t.getMonth()===e.getMonth()&&t.getDate()===e.getDate()},e.prototype.complete=function(t){confirm("Complete this habit for today?")&&(this.habits.complete(t),this.refreshHabits())},e.prototype.save=function(){var e=new t,i=document.getElementById("edit");e.id=i.dataset.id,e.name=document.getElementById("txt-edit-name").value,this.habits.save(e),this.showMain()},e.prototype.delete=function(){if(confirm("Delete this habit?")){var t=document.getElementById("edit").dataset.id;this.habits.delete(t),this.showMain()}},e.prototype.showMain=function(){this.mainActive=!0,this.hideAllSections(),this.show("main"),this.refreshHabits(),this.hide("btn-back"),this.show("btn-options")},e.prototype.showNew=function(){this.mainActive=!1,document.getElementById("edit-title").innerText="Create New Habit",document.getElementById("edit").dataset.id="",document.getElementById("txt-edit-name").value="",this.hideAllSections(),this.show("edit"),this.hide("btn-options"),this.show("btn-back"),this.hide("btn-edit-delete")},e.prototype.showEdit=function(t){this.mainActive=!1,document.getElementById("edit-title").innerText="Edit Habit",document.getElementById("edit").dataset.id=t;var e=this.habits.get(t);document.getElementById("txt-edit-name").value=e.name,this.hideAllSections(),this.show("edit"),this.hide("btn-options"),this.show("btn-back"),document.getElementById("btn-edit-delete").style.display="inline-block"},e.prototype.showOptions=function(){this.mainActive=!1,this.hideAllSections(),this.show("options"),this.hide("btn-options"),this.show("btn-back");var t=this,e=document.getElementById("edit-list");this.clear(e.id),this.habits.list.forEach((function(i){var n=t.escapeHtml(i.name),o=document.createElement("div");o.innerHTML="<button type='button' class='btn btn-edit' onclick='habitzen.edit(\""+i.id+"\")'>âœŽ&nbsp;"+n+"</button>",e.appendChild(o)}))},e.prototype.escapeHtml=function(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")},e.prototype.hideAllSections=function(){document.querySelectorAll(".section").forEach((function(t){t.style.display="none"}))},e.prototype.show=function(t){document.getElementById(t).style.display="block"},e.prototype.hide=function(t){document.getElementById(t).style.display="none"},e.prototype.clear=function(t){document.getElementById(t).textContent=""},e}(),o=function(){function t(){this.page=new n;var t=this;document.addEventListener("DOMContentLoaded",(function(){t.page.showMain()})),document.addEventListener("focus",(function(){t.page.refreshHabits()}))}return t.prototype.main=function(){this.page.showMain()},t.prototype.options=function(){this.page.showOptions()},t.prototype.new=function(){this.page.showNew()},t.prototype.edit=function(t){this.page.showEdit(t)},t.prototype.delete=function(t){this.page.delete()},t.prototype.save=function(){this.page.save()},t}();window.habitzen=window.habitzen||{},window.habitzen=new o})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,